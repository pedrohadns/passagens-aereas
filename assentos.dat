#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define LINHAS 6  
#define COLUNAS 3 

typedef struct {
    char codigo[4]; // Código do assento (ex: "1A", "3C")
    int ocupado;    // 0 = Livre, 1 = Ocupado
} Assento;

void inicializarArquivo(const char *arquivo) {
    FILE *file = fopen(arquivo, "rb");
    if (file == NULL) {
        file = fopen(arquivo, "wb");
        if (file == NULL) {
            printf("Erro ao criar o arquivo de assentos.\n");
            exit(1);
        }
        Assento assentos[LINHAS * COLUNAS];
        int indice = 0;
        for (int i = 0; i < LINHAS; i++) {
            for (int j = 0; j < COLUNAS; j++) {
                sprintf(assentos[indice].codigo, "%d%c", i + 1, 'A' + j);
                assentos[indice].ocupado = 0; // Todos livres inicialmente
                indice++;
            }
        }
        fwrite(assentos, sizeof(Assento), LINHAS * COLUNAS, file);
        fclose(file);
    } else {
        fclose(file);
    }
}

// mostra os assentos disponíveis e os que estão ocupados
void mostrarAssentos(const char *arquivo) {
    FILE *file = fopen(arquivo, "rb");
    if (file == NULL) {
        printf("Erro ao abrir o arquivo.\n");
        return;
    }

    Assento assentos[LINHAS * COLUNAS];
    fread(assentos, sizeof(Assento), LINHAS * COLUNAS, file);
    fclose(file);

    printf("\nMapa de Assentos:\n");
    for (int i = 0; i < LINHAS * COLUNAS; i++) {
        if (assentos[i].ocupado)
            printf("[X] ");  // assento ocupado
        else
            printf("[%s] ", assentos[i].codigo); // assento livre
        
        if ((i + 1) % COLUNAS == 0) {
            printf("\n");
        }
    }
}

// aqui faz a reserva de um assento
void reservarAssento(const char *arquivo) {
    FILE *file = fopen(arquivo, "rb+");
    if (file == NULL) {
        printf("Erro ao abrir o arquivo de assentos.\n");
        return;
    }
    Assento assentos[LINHAS * COLUNAS];
    fread(assentos, sizeof(Assento), LINHAS * COLUNAS, file);
    char escolha[4];
    printf("\nDigite o código do assento que deseja reservar: ");
    scanf("%s", escolha);
    int encontrado = 0;
    for (int i = 0; i < LINHAS * COLUNAS; i++) {
        if (strcmp(assentos[i].codigo, escolha) == 0) {
            encontrado = 1;
            if (assentos[i].ocupado) {
                printf("infelizmente o assento está ocupado!\n");
            } else {
                assentos[i].ocupado = 1;
                fseek(file, i * sizeof(Assento), SEEK_SET);
                fwrite(&assentos[i], sizeof(Assento), 1, file);
                printf("Assento %s reservado com sucesso!\n", escolha);
            }
            break;
        }
    }
    if (!encontrado) {
        printf("escorregou ai? Código de assento inválido!\n");
    }
    fclose(file);
}
int main() {
    const char *arquivo = "assentos.dat";

    inicializarArquivo(arquivo);

    int opcao;
    do {
        printf("\n  SELEÇÃO DE ASSENTOS  \n");
        printf("[1] visualização dos assentos disponíveis\n");
        printf("[2] Reservar assento\n");
        printf("[0] Sair\n");
        printf("Escolha uma opção:\n ");
        scanf("%d", &opcao);

        switch (opcao) { //da as opções ao usuario e define a açao
            case 1:
                mostrarAssentos(arquivo);
                break;
            case 2:
                reservarAssento(arquivo);
                break;
            case 0:
                printf("ação encerrada\n");
                break;
            default:
                printf("Opção inválida! Tente novamente.\n"); //se o cara for otario vai meter um 4 nessa bosta 
        }
    } 
}
